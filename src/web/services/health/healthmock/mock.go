// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gufranmirza/redact-api-golang/src/web/services/health (interfaces: Health)

package healthmock

import (
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
)

// MockHealth is a mock of Health interface
type MockHealth struct {
	ctrl     *gomock.Controller
	recorder *MockHealthMockRecorder
}

// MockHealthMockRecorder is the mock recorder for MockHealth
type MockHealthMockRecorder struct {
	mock *MockHealth
}

// NewMockHealth creates a new mock instance
func NewMockHealth(ctrl *gomock.Controller) *MockHealth {
	mock := &MockHealth{ctrl: ctrl}
	mock.recorder = &MockHealthMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockHealth) EXPECT() *MockHealthMockRecorder {
	return _m.recorder
}

// GetHealth mocks base method
func (_m *MockHealth) GetHealth() http.Handler {
	ret := _m.ctrl.Call(_m, "GetHealth")
	ret0, _ := ret[0].(http.Handler)
	return ret0
}

// GetHealth indicates an expected call of GetHealth
func (_mr *MockHealthMockRecorder) GetHealth() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "GetHealth", reflect.TypeOf((*MockHealth)(nil).GetHealth))
}
